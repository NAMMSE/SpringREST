01_REST.txxt
0816

# REST (Representational State Transfer)

 - Http URI로 해당 자원을 식별하고, 그것에 대한 CRUD를 http method로 구분하는 방식
 - CREATE, INSERT (POST method) POST:/employee - 새 사원을 추가한다
 - READ, SELECT (Get method)    GET:/employee?id=101 - 해당 사원을 조회한다
 - UPDATE, (Put method)			UPDATE:/employee?id=101 - 해당 사원 정보를 수정한다
 - DELETE (DELETE method) 		DELETE:/employee?id=101 - 해당 사원 정보를 삭제한다
 - 응답에 뷰 페이지 대신 데이터를 사용하기 때문에 다양한 기기에서 사용할 수 있다는 장점이 있다 / 물론 기본 컨트롤러에서도 데이터를 반환할 수 있지만 REST에서는 이게 디폴트이다
   기본적으로 .html로 반환을 하면 웹 브라우저만 해석이 가능한데 naver app 같은 프로그램에서 해석이 안되는걸 data(.xml, .json)로 받아서 해석이 가능하다
 
# Spring REST 어노테이션
 
 @RestController - 일반적인 컨트롤러와 다른 RestController임을 표시
 @ResponseBody - 일반적인 뷰 응답이 아닌 데이터를 응답한다는 것을 표시
 @RequestBody - 요청에 실려온 데이터를 자바에서 사용할 수 있는 형태로 바인딩하는 어노테이션
 
 
@RESTController

 - 해당 컨트롤러는 일반 컨트롤러와는 다르게 웹 페이지(View) 대신 데이터를 응답한다.
 - 메서드의 리턴 타입은 뷰를 찾아가는 것이 아니라 사용자에게 응답할 데이터 타입이 된다.
 - 주로 자바 객체를 JSON 또는 XML로 변환하여 응답한다
 
# jackson-databind

 - 자바 객체를 JSON 또는 XML 형식의 문자열로 쉽게 변환할 수 있는 라이브러리
 
 		<dependency> <!-- JSON -->
    		<groupId>com.fasterxml.jackson.core</groupId>
    		<artifactId>jackson-databind</artifactId>
    		<version>2.13.3</version>
		</dependency>
		
		<dependency> <!-- XML -->
		    <groupId>com.fasterxml.jackson.dataformat</groupId>
    		<artifactId>jackson-dataformat-xml</artifactId>
		    <version>2.13.3</version>
		</dependency>
		
		
# JSON (Java Sccript Object Notation) 

 - 자바스크립트의 오브젝트와 아주 유사한 방식으로 객체를 표현하는 문자열 포맷
 - 자바스크립트 오브젝트와는 약간 다르다 (ex: 키 값에 ""를 반드시 찍어야한다. 실제 javascript에서는 안찍는다.)
 - 자바스크립트가 아니더라도 해당 문자열 데이터를 실제 데이터로 치환하는 성능이 매우 뛰어나기 때문에
   언어에 구애받지 않는 통신의 표준으로 활용되고 있다
 - 숫자, 문자열, 배열, 객체, 불리언 등의 값들을 구분할 수 있다
 - JSON은 프로그래밍 언어가아니라 데이터 포맷이므로 함수 같은 것은 담을 수 없다
 {
 	"key1" : "String value",
 	"key2" : 2022,
 	"tall" : 123.1234,
 	"login" : true,
 	"friends" : ["Bill", "Mike"],
 	"member" : {
 		"k1" : "v1",
 		"k2" : 1234
 	},
 }
		
 
